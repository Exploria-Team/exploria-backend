// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  profilePictureUrl String?
  birthdate         DateTime?

  favorites Favorite[]
  reviews   Review[]

  @@map("users") //@@map is used to give a custom name to the database table
}

model Favorite {
  id            Int      @id @default(autoincrement())
  destinationId Int
  userId        String
  date          DateTime @default(now())

  user        User        @relation(fields: [userId], references: [id])
  destination Destination @relation(fields: [destinationId], references: [id])

  @@unique([userId, destinationId])

  @@map("favorites")
}

model Destination {
  id            Int        @id @default(autoincrement())
  name          String
  description   String
  averageRating Float
  lat           Float
  lon           Float
  favorites     Favorite[]
  reviews       Review[]

  @@map("destinations")
}

model Review {
  id            String   @id @default(uuid())
  userId        String
  destinationId Int
  reviewText    String
  rating        Int
  reviewDate    DateTime

  user        User        @relation(fields: [userId], references: [id])
  destination Destination @relation(fields: [destinationId], references: [id])

  @@map("reviews")
}
